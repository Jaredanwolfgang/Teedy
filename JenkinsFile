pipeline {
    agent any

    environment {
        PATH = "/opt/homebrew/bin:/usr/local/bin/:$PATH"
        DOCKER_HUB_CREDENTIALS = credentials('4ac15892-127b-4ccf-8cfb-f95c0c43ef6b')
        DOCKER_IMAGE = 'jaredanjerry/teedy-app'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        CONTAINER_NAME = 'teedy-app'
        IMAGE_NAME = "${env.DOCKER_IMAGE}:${env.DOCKER_TAG}"
        DEPLOYMENT_NAME = 'hello-node'
    }
    
    stages {
        stage('Build') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/master']],
                    extensions: [],
                    userRemoteConfigs: [[url: 'https://github.com/Jaredanwolfgang/Teedy.git']]
                )
                sh 'mvn -B clean package -P prod -DskipTests'
            }
        }
        stage('Building image') {
            steps {
                script {
                    docker.build("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}")
                }
            }
        }
        stage('Start Minikube'){
            steps {
                sh '''
                    if ! minikube status | grep -q "Running"; then
                        echo "Starting Minikube..."
                        minikube start
                    else
                        echo "Minikube already running."
                    fi
                '''
            }
        }
        stage('Set Image'){
            steps {
                sh '''
                    echo "Setting image for deployment..."
                    minikube image load ${IMAGE_NAME}
                    kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${IMAGE_NAME}
                '''
            }
        }
        stage('Verify'){
            steps {
                sh 'kubectl rollout status deployment/${DEPLOYMENT_NAME}'
                sh 'kubectl get pods'
            }
        }
    }
}
